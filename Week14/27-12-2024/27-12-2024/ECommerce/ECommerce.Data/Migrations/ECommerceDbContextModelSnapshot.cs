// <auto-generated />
using System;
using ECommerce.Data.Concrete.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.Data.Migrations
{
    [DbContext(typeof(ECommerceDbContext))]
    partial class ECommerceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Entity.Concrete.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "115c7796-cfac-44de-91b5-916eaae125b5",
                            Description = "Administrator role",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "811f466c-9d06-43f8-a054-24aedbb4161b",
                            Description = "Regular user role",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            AccessFailedCount = 0,
                            Address = "",
                            City = "",
                            ConcurrencyStamp = "cec0055f-3257-4072-89de-44a10634ad73",
                            DateOfBirth = new DateTime(2024, 12, 27, 12, 14, 18, 663, DateTimeKind.Local).AddTicks(7221),
                            Email = "sadmin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Sample",
                            Gender = 1,
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "SADMIN@GMAIL.COM",
                            NormalizedUserName = "SADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEKa0wJgkqZEgyslWiln7r4pR2xvJUCci7ccwF2gC1kGn4meRR4wf1VDnhuNeF9CmoQ==",
                            PhoneNumber = "",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bdef09aa-60ca-4b42-9db6-b60cf9ab61fb",
                            TwoFactorEnabled = false,
                            UserName = "sadmin@gmail.com"
                        },
                        new
                        {
                            Id = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            AccessFailedCount = 0,
                            Address = "",
                            City = "",
                            ConcurrencyStamp = "27782f2e-322b-428b-b43e-7ba0aba694ad",
                            DateOfBirth = new DateTime(2024, 12, 27, 12, 14, 18, 723, DateTimeKind.Local).AddTicks(4867),
                            Email = "suser@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Sample",
                            Gender = 1,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "SUSER@GMAIL.COM",
                            NormalizedUserName = "SUSER@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEOt6LBn9j9WjGK7JUCrUHAxaIL6m4eNxdkaMuRq24cxDtR9MtMTucbcQmDh1xrCYQg==",
                            PhoneNumber = "",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4bfef0ba-1f9a-4a1c-8bba-12ccf6a32029",
                            TwoFactorEnabled = false,
                            UserName = "suser@gmail.com"
                        });
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.Basket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.BasketItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BasketId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.HasIndex("ProductId");

                    b.ToTable("BasketItems");
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6402),
                            Description = "Elektronik ürünler",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Elektronik"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6406),
                            Description = "Giyim ürünleri",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Giyim"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6408),
                            Description = "Kozmetik ürünler",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kozmetik"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6409),
                            Description = "Kitaplar",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kitap"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6410),
                            Description = "Hediyelik eşyalar",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Hediyelik Eşya"
                        });
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 102,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 103,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 104,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 105,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 5
                        },
                        new
                        {
                            Id = 106,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 5
                        },
                        new
                        {
                            Id = 107,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 108,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 5
                        },
                        new
                        {
                            Id = 109,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 110,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 5
                        },
                        new
                        {
                            Id = 111,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 5
                        },
                        new
                        {
                            Id = 112,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 113,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 4
                        },
                        new
                        {
                            Id = 114,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 115,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 4
                        },
                        new
                        {
                            Id = 116,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 117,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 118,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 119,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 120,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 121,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 122,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 3
                        },
                        new
                        {
                            Id = 123,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 2
                        },
                        new
                        {
                            Id = 124,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 2
                        },
                        new
                        {
                            Id = 125,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 1
                        },
                        new
                        {
                            Id = 126,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 1
                        },
                        new
                        {
                            Id = 127,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 1
                        },
                        new
                        {
                            Id = 128,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 1
                        },
                        new
                        {
                            Id = 129,
                            ApplicationUserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            CreatedDate = new DateTime(2024, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 0
                        },
                        new
                        {
                            Id = 130,
                            ApplicationUserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            CreatedDate = new DateTime(2024, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 0
                        });
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 201,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7029),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 101,
                            ProductId = 1,
                            Quantity = 1,
                            UnitPrice = 2999.99m
                        },
                        new
                        {
                            Id = 202,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7032),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 102,
                            ProductId = 2,
                            Quantity = 1,
                            UnitPrice = 4999.99m
                        },
                        new
                        {
                            Id = 203,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7033),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 103,
                            ProductId = 3,
                            Quantity = 1,
                            UnitPrice = 1999.99m
                        },
                        new
                        {
                            Id = 204,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7035),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 104,
                            ProductId = 4,
                            Quantity = 1,
                            UnitPrice = 1999.99m
                        },
                        new
                        {
                            Id = 205,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7036),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 105,
                            ProductId = 5,
                            Quantity = 1,
                            UnitPrice = 399.99m
                        },
                        new
                        {
                            Id = 206,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7038),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 106,
                            ProductId = 6,
                            Quantity = 1,
                            UnitPrice = 799.99m
                        },
                        new
                        {
                            Id = 207,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7039),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 107,
                            ProductId = 7,
                            Quantity = 1,
                            UnitPrice = 299.99m
                        },
                        new
                        {
                            Id = 208,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7041),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 108,
                            ProductId = 8,
                            Quantity = 1,
                            UnitPrice = 3499.99m
                        },
                        new
                        {
                            Id = 209,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7042),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 109,
                            ProductId = 9,
                            Quantity = 1,
                            UnitPrice = 2499.99m
                        },
                        new
                        {
                            Id = 210,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7044),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 110,
                            ProductId = 10,
                            Quantity = 1,
                            UnitPrice = 3999.99m
                        },
                        new
                        {
                            Id = 211,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7045),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 111,
                            ProductId = 11,
                            Quantity = 1,
                            UnitPrice = 499.99m
                        },
                        new
                        {
                            Id = 212,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7047),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 112,
                            ProductId = 12,
                            Quantity = 1,
                            UnitPrice = 299.99m
                        },
                        new
                        {
                            Id = 213,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7048),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 113,
                            ProductId = 13,
                            Quantity = 1,
                            UnitPrice = 1999.99m
                        },
                        new
                        {
                            Id = 214,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7051),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 114,
                            ProductId = 14,
                            Quantity = 1,
                            UnitPrice = 799.99m
                        },
                        new
                        {
                            Id = 215,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7052),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 115,
                            ProductId = 15,
                            Quantity = 1,
                            UnitPrice = 1499.99m
                        },
                        new
                        {
                            Id = 216,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7053),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 116,
                            ProductId = 16,
                            Quantity = 1,
                            UnitPrice = 299.99m
                        },
                        new
                        {
                            Id = 217,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7055),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 117,
                            ProductId = 17,
                            Quantity = 1,
                            UnitPrice = 899.99m
                        },
                        new
                        {
                            Id = 218,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7056),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 118,
                            ProductId = 18,
                            Quantity = 1,
                            UnitPrice = 199.99m
                        },
                        new
                        {
                            Id = 219,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7057),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 119,
                            ProductId = 19,
                            Quantity = 1,
                            UnitPrice = 149.99m
                        },
                        new
                        {
                            Id = 220,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7059),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 120,
                            ProductId = 20,
                            Quantity = 1,
                            UnitPrice = 1999.99m
                        },
                        new
                        {
                            Id = 221,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7060),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 121,
                            ProductId = 21,
                            Quantity = 1,
                            UnitPrice = 49.99m
                        },
                        new
                        {
                            Id = 222,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7061),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 122,
                            ProductId = 22,
                            Quantity = 1,
                            UnitPrice = 199.99m
                        },
                        new
                        {
                            Id = 223,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7063),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 123,
                            ProductId = 23,
                            Quantity = 1,
                            UnitPrice = 79.99m
                        },
                        new
                        {
                            Id = 224,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7064),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 124,
                            ProductId = 24,
                            Quantity = 1,
                            UnitPrice = 39.99m
                        },
                        new
                        {
                            Id = 225,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7065),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 125,
                            ProductId = 25,
                            Quantity = 1,
                            UnitPrice = 19.99m
                        },
                        new
                        {
                            Id = 226,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7066),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 126,
                            ProductId = 26,
                            Quantity = 1,
                            UnitPrice = 299.99m
                        },
                        new
                        {
                            Id = 227,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7069),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 127,
                            ProductId = 27,
                            Quantity = 1,
                            UnitPrice = 59.99m
                        },
                        new
                        {
                            Id = 228,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7071),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 128,
                            ProductId = 28,
                            Quantity = 1,
                            UnitPrice = 29.99m
                        },
                        new
                        {
                            Id = 229,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7073),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 129,
                            ProductId = 29,
                            Quantity = 1,
                            UnitPrice = 199.99m
                        },
                        new
                        {
                            Id = 230,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(7074),
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 130,
                            ProductId = 30,
                            Quantity = 1,
                            UnitPrice = 89.99m
                        });
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Properties")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6530),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Akıllı Telefon",
                            Price = 2999.99m,
                            Properties = "Son model akıllı telefon"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6537),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Laptop",
                            Price = 4999.99m,
                            Properties = "Yüksek performanslı laptop"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6540),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kamera",
                            Price = 1999.99m,
                            Properties = "Yüksek çözünürlüklü kamera"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6541),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tablet",
                            Price = 1999.99m,
                            Properties = "Taşınabilir tablet"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6543),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bluetooth Hoparlör",
                            Price = 399.99m,
                            Properties = "Kablosuz hoparlör"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6546),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Akıllı Saat",
                            Price = 799.99m,
                            Properties = "Akıllı saat"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6548),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kulaklık",
                            Price = 299.99m,
                            Properties = "Kablosuz kulaklık"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6550),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dizüstü Bilgisayar",
                            Price = 3499.99m,
                            Properties = "Hafif dizüstü bilgisayar"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6552),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Oyun Konsolu",
                            Price = 2499.99m,
                            Properties = "Yeni nesil oyun konsolu"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6554),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Masaüstü Bilgisayar",
                            Price = 3999.99m,
                            Properties = "Güçlü masaüstü bilgisayar"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6556),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Yazıcı",
                            Price = 499.99m,
                            Properties = "Renkli yazıcı"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6558),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tarayıcı",
                            Price = 299.99m,
                            Properties = "Doküman tarayıcı"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6559),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Projeor",
                            Price = 1999.99m,
                            Properties = "Ev sinema sistemi için projektör"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6562),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kamera Lens",
                            Price = 799.99m,
                            Properties = "Yüksek kaliteli lens"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6563),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Aksiyon Kamerası",
                            Price = 1499.99m,
                            Properties = "Aksiyon çekimleri için kamera"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6565),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Küçük Ev Aletleri",
                            Price = 299.99m,
                            Properties = "Küçük ev aletleri"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6567),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mutfak Robotu",
                            Price = 899.99m,
                            Properties = "Mutfak robotu"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6569),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Blender",
                            Price = 199.99m,
                            Properties = "Blender"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6600),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mikser",
                            Price = 149.99m,
                            Properties = "Mikser"
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6602),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fırın",
                            Price = 1999.99m,
                            Properties = "Dijital fırın"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6604),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ruj",
                            Price = 49.99m,
                            Properties = "Kırmızı ruj"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6605),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Parfüm",
                            Price = 199.99m,
                            Properties = "Kadın parfümü"
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6607),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Krem",
                            Price = 79.99m,
                            Properties = "Nemlendirici krem"
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6608),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Şampuan",
                            Price = 39.99m,
                            Properties = "Saç şampuanı"
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6610),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dudak Balmı",
                            Price = 19.99m,
                            Properties = "Nemlendirici dudak balmı"
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6612),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Makyaj Seti",
                            Price = 299.99m,
                            Properties = "Makyaj seti"
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6613),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Göz Farı",
                            Price = 59.99m,
                            Properties = "Göz farı"
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6615),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Oje",
                            Price = 29.99m,
                            Properties = "Renkli oje"
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6617),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cilt Bakım Seti",
                            Price = 199.99m,
                            Properties = "Cilt bakım seti"
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6618),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vücut Losyonu",
                            Price = 89.99m,
                            Properties = "Vücut losyonu"
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6620),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Saç Spreyi",
                            Price = 39.99m,
                            Properties = "Saç spreyi"
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6621),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Makyaj Ayna",
                            Price = 49.99m,
                            Properties = "Makyaj aynası"
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6624),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tırnak Bakım Seti",
                            Price = 29.99m,
                            Properties = "Tırnak bakım seti"
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6627),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Yüz Maskesi",
                            Price = 19.99m,
                            Properties = "Yüz maskesi"
                        },
                        new
                        {
                            Id = 35,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6629),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Göz Kremi",
                            Price = 59.99m,
                            Properties = "Göz kremi"
                        },
                        new
                        {
                            Id = 36,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6630),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dudak Peelingi",
                            Price = 29.99m,
                            Properties = "Dudak peelingi"
                        },
                        new
                        {
                            Id = 37,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6632),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cilt Temizleme Jeli",
                            Price = 39.99m,
                            Properties = "Cilt temizleme jeli"
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6633),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vücut Scrub'ı",
                            Price = 49.99m,
                            Properties = "Vücut scrub'ı"
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6635),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Saç Maskesi",
                            Price = 59.99m,
                            Properties = "Saç maskesi"
                        },
                        new
                        {
                            Id = 40,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6636),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Makyaj Fırçası",
                            Price = 19.99m,
                            Properties = "Makyaj fırçası"
                        },
                        new
                        {
                            Id = 41,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6638),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tişört",
                            Price = 99.99m,
                            Properties = "Pamuklu tişört"
                        },
                        new
                        {
                            Id = 42,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6640),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pantolon",
                            Price = 149.99m,
                            Properties = "Şık pantolon"
                        },
                        new
                        {
                            Id = 43,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6641),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Elbise",
                            Price = 199.99m,
                            Properties = "Şık elbise"
                        },
                        new
                        {
                            Id = 44,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6643),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ceket",
                            Price = 299.99m,
                            Properties = "Şık ceket"
                        },
                        new
                        {
                            Id = 45,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6644),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kaban",
                            Price = 399.99m,
                            Properties = "Kış kabanı"
                        },
                        new
                        {
                            Id = 46,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6646),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Roman",
                            Price = 39.99m,
                            Properties = "Roman"
                        },
                        new
                        {
                            Id = 47,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6647),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bilim Kurgu",
                            Price = 29.99m,
                            Properties = "Bilim kurgu kitabı"
                        },
                        new
                        {
                            Id = 48,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6649),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tarih Kitabı",
                            Price = 34.99m,
                            Properties = "Tarih kitabı"
                        },
                        new
                        {
                            Id = 49,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6651),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Çocuk Kitabı",
                            Price = 19.99m,
                            Properties = "Çocuklar için kitap"
                        },
                        new
                        {
                            Id = 50,
                            CreatedDate = new DateTime(2024, 12, 27, 9, 14, 18, 663, DateTimeKind.Utc).AddTicks(6653),
                            ImageUrl = "image1.png",
                            IsActive = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Yemek Kitabı",
                            Price = 49.99m,
                            Properties = "Yemek tarifleri kitabı"
                        });
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 1,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 21,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 21,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 22,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 22,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 23,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 23,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 24,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 24,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 25,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 25,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 26,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 26,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 27,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 27,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 28,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 28,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 29,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 29,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 30,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 30,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 31,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 31,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 32,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 32,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 33,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 33,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 34,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 34,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 35,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 35,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 36,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 36,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 37,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 37,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 38,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 38,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 39,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 39,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 40,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 40,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 41,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 41,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 42,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 42,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 43,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 43,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 44,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 44,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 45,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 45,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 46,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 46,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 47,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 47,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 48,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 48,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 49,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 49,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 50,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 50,
                            CategoryId = 5
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "c0b7fef7-df2b-4857-9b3d-bc8967ad19ac",
                            RoleId = "115c7796-cfac-44de-91b5-916eaae125b5"
                        },
                        new
                        {
                            UserId = "14a0183f-1e96-4930-a83d-6ef5f22d8c09",
                            RoleId = "811f466c-9d06-43f8-a054-24aedbb4161b"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.Basket", b =>
                {
                    b.HasOne("ECommerce.Entity.Concrete.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.BasketItem", b =>
                {
                    b.HasOne("ECommerce.Entity.Concrete.Basket", "Basket")
                        .WithMany("BasketItems")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Entity.Concrete.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.Order", b =>
                {
                    b.HasOne("ECommerce.Entity.Concrete.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.OrderItem", b =>
                {
                    b.HasOne("ECommerce.Entity.Concrete.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Entity.Concrete.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.ProductCategory", b =>
                {
                    b.HasOne("ECommerce.Entity.Concrete.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Entity.Concrete.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("ECommerce.Entity.Concrete.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ECommerce.Entity.Concrete.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ECommerce.Entity.Concrete.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("ECommerce.Entity.Concrete.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Entity.Concrete.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ECommerce.Entity.Concrete.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.Basket", b =>
                {
                    b.Navigation("BasketItems");
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("ECommerce.Entity.Concrete.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
