// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PartyApp.Data.Concrete;

#nullable disable

namespace PartyApp.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PartyApp.Entity.Concrete.Invitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Invitations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventDate = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Noel Partisi"
                        },
                        new
                        {
                            Id = 2,
                            EventDate = new DateTime(2024, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Doğum Günü Partisi"
                        });
                });

            modelBuilder.Entity("PartyApp.Entity.Concrete.InvitationParticipant", b =>
                {
                    b.Property<int>("InvitationId")
                        .HasColumnType("int");

                    b.Property<int>("ParticipantId")
                        .HasColumnType("int");

                    b.HasKey("InvitationId", "ParticipantId");

                    b.HasIndex("ParticipantId");

                    b.ToTable("InvitationParticipants");

                    b.HasData(
                        new
                        {
                            InvitationId = 1,
                            ParticipantId = 1
                        },
                        new
                        {
                            InvitationId = 1,
                            ParticipantId = 2
                        },
                        new
                        {
                            InvitationId = 1,
                            ParticipantId = 3
                        },
                        new
                        {
                            InvitationId = 1,
                            ParticipantId = 4
                        },
                        new
                        {
                            InvitationId = 1,
                            ParticipantId = 5
                        },
                        new
                        {
                            InvitationId = 1,
                            ParticipantId = 6
                        },
                        new
                        {
                            InvitationId = 1,
                            ParticipantId = 7
                        },
                        new
                        {
                            InvitationId = 1,
                            ParticipantId = 8
                        },
                        new
                        {
                            InvitationId = 1,
                            ParticipantId = 10
                        },
                        new
                        {
                            InvitationId = 2,
                            ParticipantId = 2
                        },
                        new
                        {
                            InvitationId = 2,
                            ParticipantId = 4
                        },
                        new
                        {
                            InvitationId = 2,
                            ParticipantId = 6
                        },
                        new
                        {
                            InvitationId = 2,
                            ParticipantId = 7
                        },
                        new
                        {
                            InvitationId = 2,
                            ParticipantId = 8
                        },
                        new
                        {
                            InvitationId = 2,
                            ParticipantId = 9
                        },
                        new
                        {
                            InvitationId = 2,
                            ParticipantId = 10
                        });
                });

            modelBuilder.Entity("PartyApp.Entity.Concrete.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte?>("Age")
                        .HasColumnType("tinyint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte>("NumberOfPeople")
                        .HasColumnType("tinyint");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Participants", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = (byte)48,
                            Email = "didierdrogba@gmail.com",
                            FullName = "Didier Drogba",
                            NumberOfPeople = (byte)1,
                            PhoneNumber = ""
                        },
                        new
                        {
                            Id = 2,
                            Age = (byte)37,
                            Email = "lionelmessi@gmail.com",
                            FullName = "Lionel Messi",
                            NumberOfPeople = (byte)3,
                            PhoneNumber = "123-456-7890"
                        },
                        new
                        {
                            Id = 3,
                            Age = (byte)39,
                            Email = "cristianoronaldo@gmail.com",
                            FullName = "Cristiano Ronaldo",
                            NumberOfPeople = (byte)5,
                            PhoneNumber = "234-567-8901"
                        },
                        new
                        {
                            Id = 4,
                            Age = (byte)32,
                            Email = "neymar@gmail.com",
                            FullName = "Neymar Jr.",
                            NumberOfPeople = (byte)2,
                            PhoneNumber = "345-678-9012"
                        },
                        new
                        {
                            Id = 5,
                            Age = (byte)25,
                            Email = "kylianmbappe@gmail.com",
                            FullName = "Kylian Mbappé",
                            NumberOfPeople = (byte)4,
                            PhoneNumber = "456-789-0123"
                        },
                        new
                        {
                            Id = 6,
                            Age = (byte)31,
                            Email = "mohamedsalah@gmail.com",
                            FullName = "Mohamed Salah",
                            NumberOfPeople = (byte)4,
                            PhoneNumber = "567-890-1234"
                        },
                        new
                        {
                            Id = 7,
                            Age = (byte)33,
                            Email = "kevindebruyne@gmail.com",
                            FullName = "Kevin De Bruyne",
                            NumberOfPeople = (byte)2,
                            PhoneNumber = "678-901-2345"
                        },
                        new
                        {
                            Id = 8,
                            Age = (byte)30,
                            Email = "harrykane@gmail.com",
                            FullName = "Harry Kane",
                            NumberOfPeople = (byte)3,
                            PhoneNumber = "789-012-3456"
                        },
                        new
                        {
                            Id = 9,
                            Age = (byte)38,
                            Email = "sergioramos@gmail.com",
                            FullName = "Sergio Ramos",
                            NumberOfPeople = (byte)2,
                            PhoneNumber = "890-123-4567"
                        },
                        new
                        {
                            Id = 10,
                            Age = (byte)35,
                            Email = "robertlewandowski@gmail.com",
                            FullName = "Robert Lewandowski",
                            NumberOfPeople = (byte)4,
                            PhoneNumber = "901-234-5678"
                        });
                });

            modelBuilder.Entity("PartyApp.Entity.Concrete.InvitationParticipant", b =>
                {
                    b.HasOne("PartyApp.Entity.Concrete.Invitation", "Invitation")
                        .WithMany("InvitationParticipants")
                        .HasForeignKey("InvitationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PartyApp.Entity.Concrete.Participant", "Participant")
                        .WithMany("InvitationParticipants")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invitation");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("PartyApp.Entity.Concrete.Invitation", b =>
                {
                    b.Navigation("InvitationParticipants");
                });

            modelBuilder.Entity("PartyApp.Entity.Concrete.Participant", b =>
                {
                    b.Navigation("InvitationParticipants");
                });
#pragma warning restore 612, 618
        }
    }
}
